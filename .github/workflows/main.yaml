name: Deploy to Azure Web App

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

permissions:
  id-token: write
  contents: read

jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Lint code
        run: echo "Linting repository"

      - name: Run unit tests
        run: echo "Running unit tests"

  build-and-push-acr-image:
    name: Build and Push to ACR
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}  # Secret: JSON with clientId, clientSecret, subscriptionId, tenantId

      - name: Login to Azure Container Registry
        uses: azure/docker-login@v2
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}  # e.g., myregistry.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build, tag, and push image to ACR
        id: build-image
        env:
          ACR_REGISTRY: ${{ secrets.ACR_LOGIN_SERVER }}
          ACR_REPOSITORY: ${{ secrets.ACR_REPOSITORY_NAME }}  # e.g., my-app
          IMAGE_TAG: latest
        run: |
          docker build -t $ACR_REGISTRY/$ACR_REPOSITORY:$IMAGE_TAG .
          docker push $ACR_REGISTRY/$ACR_REPOSITORY:$IMAGE_TAG
          echo "image=$ACR_REGISTRY/$ACR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

  deploy-to-webapp:
    name: Deploy to Azure Web App
    needs: build-and-push-acr-image
    runs-on: ubuntu-latest  # Or self-hosted if needed
    steps:
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}  # e.g., my-webapp
          slot-name: production  # Optional: for deployment slots
          images: ${{ needs.build-and-push-acr-image.outputs.image }}  # Uses the built image